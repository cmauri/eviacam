<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{4C7EE63E-9BCD-4DBA-A0D3-075D3DBB2597}</ProjectGuid>
    <RootNamespace>src</RootNamespace>
    <Keyword>Win32Proj</Keyword>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v120</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <PlatformToolset>v120</PlatformToolset>
    <UseOfMfc>false</UseOfMfc>
    <UseOfAtl>false</UseOfAtl>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(VCTargetsPath)Microsoft.CPP.UpgradeFromVC71.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>12.0.30501.0</_ProjectFileVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(SolutionDir)$(Configuration)\bin\</OutDir>
    <IntDir>$(SolutionDir)$(Configuration)\evicam\</IntDir>
    <ExtensionsToDeleteOnClean>*.dll%3b*.obj%3b*.ilk%3b*.pdb%3b*.tlb%3b*.tli%3b*.tlh%3b*.tmp%3b*.rsp%3b*.bat%3b$(TargetPath)</ExtensionsToDeleteOnClean>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(SolutionDir)$(Configuration)\bin\</OutDir>
    <IntDir>$(SolutionDir)$(Configuration)\evicam\</IntDir>
    <ExtensionsToDeleteOnClean>*.dll%3b*.obj%3b*.ilk%3b*.pdb%3b*.tlb%3b*.tli%3b*.tlh%3b*.tmp%3b*.rsp%3b*.bat%3b$(TargetPath)</ExtensionsToDeleteOnClean>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>..\;..\simplelog;..\creavision;..\wxcamwindow;..\wxutil;$(WXWIN)\lib\vc_lib\mswud;$(WXWIN)\include;$(CVPATH)\build\include</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;NOPCH;__WXMSW__;__WXDEBUG__;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <PrecompiledHeader />
      <WarningLevel>Level4</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <CallingConvention>Cdecl</CallingConvention>
    </ClCompile>
    <ResourceCompile>
      <AdditionalIncludeDirectories>$(WXWIN)\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <PreLinkEvent>
      <Command>mkdir $(TargetDir)ca
mkdir $(TargetDir)es
mkdir $(TargetDir)gl
mkdir $(TargetDir)it
mkdir $(TargetDir)tr
mkdir $(TargetDir)de
mkdir $(TargetDir)oc
mkdir $(TargetDir)fr
mkdir $(TargetDir)ar
mkdir $(TargetDir)he
mkdir $(TargetDir)ru
mkdir $(TargetDir)pt_BR
mkdir $(TargetDir)ja
mkdir $(TargetDir)el
mkdir $(TargetDir)lt
mkdir $(TargetDir)zh_TW
mkdir $(TargetDir)zh_CN

echo F | xcopy "$(SolutionDir)..\po\ca.gmo" $(TargetDir)ca\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\es.gmo" $(TargetDir)es\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\gl.gmo" $(TargetDir)gl\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\it.gmo" $(TargetDir)it\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\tr.gmo" $(TargetDir)tr\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\de.gmo" $(TargetDir)de\eviacam.mo /D
echo F |  xcopy "$(SolutionDir)..\po\oc.gmo" $(TargetDir)oc\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\fr.gmo" $(TargetDir)fr\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\ar.gmo" $(TargetDir)ar\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\he.gmo" $(TargetDir)he\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\ru.gmo" $(TargetDir)ru\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\pt_BR.gmo" $(TargetDir)pt_BR\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\ja.gmo" $(TargetDir)ja\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\el.gmo" $(TargetDir)el\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\lt.gmo" $(TargetDir)lt\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\zh_TW.gmo" $(TargetDir)zh_TW\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\zh_CN.gmo" $(TargetDir)zh_CN\eviacam.mo /D

if not exist $(TargetDir)ca\wxstd.mo copy "%25WXWIN%25\locale\ca.mo" $(TargetDir)ca\wxstd.mo
if not exist $(TargetDir)es\wxstd.mo copy "%25WXWIN%25\locale\es.mo" $(TargetDir)es\wxstd.mo
if not exist $(TargetDir)gl\wxstd.mo copy "%25WXWIN%25\locale\gl_ES.mo" $(TargetDir)gl\wxstd.mo
if not exist $(TargetDir)it\wxstd.mo copy "%25WXWIN%25\locale\it.mo" $(TargetDir)it\wxstd.mo
if not exist $(TargetDir)tr\wxstd.mo copy "%25WXWIN%25\locale\tr.mo" $(TargetDir)tr\wxstd.mo
if not exist $(TargetDir)de\wxstd.mo copy "%25WXWIN%25\locale\de.mo" $(TargetDir)de\wxstd.mo
rem if not exist $(TargetDir)oc\wxstd.mo copy "%25WXWIN%25\locale\oc.mo" $(TargetDir)oc\wxstd.mo
if not exist $(TargetDir)fr\wxstd.mo copy "%25WXWIN%25\locale\fr.mo" $(TargetDir)fr\wxstd.mo
rem if not exist $(TargetDir)ar\wxstd.mo copy "%25WXWIN%25\locale\ar.mo" $(TargetDir)ar\wxstd.mo
rem if not exist $(TargetDir)he\wxstd.mo copy "%25WXWIN%25\locale\he.mo" $(TargetDir)he\wxstd.mo
if not exist $(TargetDir)ru\wxstd.mo copy "%25WXWIN%25\locale\ru.mo" $(TargetDir)ru\wxstd.mo
if not exist $(TargetDir)pt_BR\wxstd.mo copy "%25WXWIN%25\locale\pt_BR.mo" $(TargetDir)pt_BR\wxstd.mo
if not exist $(TargetDir)ja\wxstd.mo copy "%25WXWIN%25\locale\ja.mo" $(TargetDir)ja\wxstd.mo
if not exist $(TargetDir)el\wxstd.mo copy "%25WXWIN%25\locale\el.mo" $(TargetDir)el\wxstd.mo
if not exist $(TargetDir)zh_TW\wxstd.mo copy "%25WXWIN%25\locale\zh_TW.mo" $(TargetDir)zh_TW\wxstd.mo
if not exist $(TargetDir)zh_CN\wxstd.mo copy "%25WXWIN%25\locale\zh_CN.mo" $(TargetDir)zh_CN\wxstd.mo

mkdir $(TargetDir)\resources
robocopy "$(SolutionDir)..\src\resources" "$(TargetDir)\resources" /E /Xo
if %ERRORLEVEL% LEQ 1 exit 0
</Command>
    </PreLinkEvent>
    <Link>
      <AdditionalDependencies>wxmsw32ud_richtext.lib;wxmsw32ud_aui.lib;wxmsw32ud_core.lib;wxbase32ud.lib;wxtiffd.lib;wxjpegd.lib;wxpngd.lib;wxzlibd.lib;wxregexud.lib;wxmsw32ud_adv.lib;wxmsw32ud_html.lib;wxmsw32ud_xrc.lib;wxbase32ud_net.lib;wxbase32ud_xml.lib;opencv_world460d.lib;wxexpatd.lib;comctl32.lib;rpcrt4.lib;winmm.lib;simplelog.lib;wxcamwindow.lib;wxutil.lib;strmiids.lib;uuid.lib;quartz.lib;wsock32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <OutputFile>$(OutDir)eviacam.exe</OutputFile>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <AdditionalLibraryDirectories>$(CVPATH)\build\x86\vc12\lib;$(WXWIN)\lib\vc_lib;$(DSHOW_SAMPLES)\baseclasses\$(Configuration);$(SolutionDir)$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <UACExecutionLevel>AsInvoker</UACExecutionLevel>
      <UACUIAccess>false</UACUIAccess>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <IgnoreSpecificDefaultLibraries>LIBCMTD;MSVCRT;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ProgramDatabaseFile>$(SolutionDir)$(Configuration)/evicam.pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention />
      <TargetMachine>MachineX86</TargetMachine>
    </Link>
    <PostBuildEvent>
      <Command>for %%x in (
	opencv_world460d.dll
) do (
	if not exist $(TargetDir)%%x copy $(CVPATH)\build\x86\vc12\bin\%%x $(TargetDir)
)

if not exist $(TargetDir)haarcascade_frontalface_default.xml copy "$(CVPATH)\sources\data\haarcascades\haarcascade_frontalface_default.xml" $(TargetDir)
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <AdditionalIncludeDirectories>..\;..\simplelog;..\creavision;..\wxcamwindow;..\wxutil;$(WXWIN)\lib\vc_x64_lib\mswud;$(WXWIN)\include;$(CVPATH)\build\include</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;NOPCH;__WXMSW__;__WXDEBUG__;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <CallingConvention>Cdecl</CallingConvention>
    </ClCompile>
    <ResourceCompile>
      <AdditionalIncludeDirectories>$(WXWIN)\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <PreLinkEvent>
      <Command>mkdir $(TargetDir)ca
mkdir $(TargetDir)es
mkdir $(TargetDir)gl
mkdir $(TargetDir)it
mkdir $(TargetDir)tr
mkdir $(TargetDir)de
mkdir $(TargetDir)oc
mkdir $(TargetDir)fr
mkdir $(TargetDir)ar
mkdir $(TargetDir)he
mkdir $(TargetDir)ru
mkdir $(TargetDir)pt_BR
mkdir $(TargetDir)ja
mkdir $(TargetDir)el
mkdir $(TargetDir)lt
mkdir $(TargetDir)zh_TW
mkdir $(TargetDir)zh_CN

echo F | xcopy "$(SolutionDir)..\po\ca.gmo" $(TargetDir)ca\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\es.gmo" $(TargetDir)es\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\gl.gmo" $(TargetDir)gl\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\it.gmo" $(TargetDir)it\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\tr.gmo" $(TargetDir)tr\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\de.gmo" $(TargetDir)de\eviacam.mo /D
echo F |  xcopy "$(SolutionDir)..\po\oc.gmo" $(TargetDir)oc\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\fr.gmo" $(TargetDir)fr\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\ar.gmo" $(TargetDir)ar\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\he.gmo" $(TargetDir)he\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\ru.gmo" $(TargetDir)ru\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\pt_BR.gmo" $(TargetDir)pt_BR\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\ja.gmo" $(TargetDir)ja\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\el.gmo" $(TargetDir)el\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\lt.gmo" $(TargetDir)lt\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\zh_TW.gmo" $(TargetDir)zh_TW\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\zh_CN.gmo" $(TargetDir)zh_CN\eviacam.mo /D

if not exist $(TargetDir)ca\wxstd.mo copy "%25WXWIN%25\locale\ca.mo" $(TargetDir)ca\wxstd.mo
if not exist $(TargetDir)es\wxstd.mo copy "%25WXWIN%25\locale\es.mo" $(TargetDir)es\wxstd.mo
if not exist $(TargetDir)gl\wxstd.mo copy "%25WXWIN%25\locale\gl_ES.mo" $(TargetDir)gl\wxstd.mo
if not exist $(TargetDir)it\wxstd.mo copy "%25WXWIN%25\locale\it.mo" $(TargetDir)it\wxstd.mo
if not exist $(TargetDir)tr\wxstd.mo copy "%25WXWIN%25\locale\tr.mo" $(TargetDir)tr\wxstd.mo
if not exist $(TargetDir)de\wxstd.mo copy "%25WXWIN%25\locale\de.mo" $(TargetDir)de\wxstd.mo
rem if not exist $(TargetDir)oc\wxstd.mo copy "%25WXWIN%25\locale\oc.mo" $(TargetDir)oc\wxstd.mo
if not exist $(TargetDir)fr\wxstd.mo copy "%25WXWIN%25\locale\fr.mo" $(TargetDir)fr\wxstd.mo
rem if not exist $(TargetDir)ar\wxstd.mo copy "%25WXWIN%25\locale\ar.mo" $(TargetDir)ar\wxstd.mo
rem if not exist $(TargetDir)he\wxstd.mo copy "%25WXWIN%25\locale\he.mo" $(TargetDir)he\wxstd.mo
if not exist $(TargetDir)ru\wxstd.mo copy "%25WXWIN%25\locale\ru.mo" $(TargetDir)ru\wxstd.mo
if not exist $(TargetDir)pt_BR\wxstd.mo copy "%25WXWIN%25\locale\pt_BR.mo" $(TargetDir)pt_BR\wxstd.mo
if not exist $(TargetDir)ja\wxstd.mo copy "%25WXWIN%25\locale\ja.mo" $(TargetDir)ja\wxstd.mo
if not exist $(TargetDir)el\wxstd.mo copy "%25WXWIN%25\locale\el.mo" $(TargetDir)el\wxstd.mo
if not exist $(TargetDir)zh_TW\wxstd.mo copy "%25WXWIN%25\locale\zh_TW.mo" $(TargetDir)zh_TW\wxstd.mo
if not exist $(TargetDir)zh_CN\wxstd.mo copy "%25WXWIN%25\locale\zh_CN.mo" $(TargetDir)zh_CN\wxstd.mo

mkdir $(TargetDir)\resources
robocopy "$(SolutionDir)..\src\resources" "$(TargetDir)\resources" /E /Xo
if %ERRORLEVEL% LEQ 1 exit 0
</Command>
    </PreLinkEvent>
    <Link>
      <AdditionalDependencies>wxmsw32ud_richtext.lib;wxmsw32ud_aui.lib;wxmsw32ud_core.lib;wxbase32ud.lib;wxtiffd.lib;wxjpegd.lib;wxpngd.lib;wxzlibd.lib;wxregexud.lib;wxmsw32ud_adv.lib;wxmsw32ud_html.lib;wxmsw32ud_xrc.lib;wxbase32ud_net.lib;wxbase32ud_xml.lib;opencv_world460d.lib;wxexpatd.lib;comctl32.lib;rpcrt4.lib;winmm.lib;simplelog.lib;wxcamwindow.lib;wxutil.lib;strmiids.lib;uuid.lib;quartz.lib;wsock32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <OutputFile>$(OutDir)eviacam.exe</OutputFile>
      <SuppressStartupBanner>true</SuppressStartupBanner>
      <AdditionalLibraryDirectories>$(CVPATH)\build\x64\vc15\lib;$(WXWIN)\lib\vc_x64_lib;$(DSHOW_SAMPLES)\baseclasses\$(Configuration);$(SolutionDir)$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <UACExecutionLevel>AsInvoker</UACExecutionLevel>
      <UACUIAccess>false</UACUIAccess>
      <IgnoreAllDefaultLibraries>false</IgnoreAllDefaultLibraries>
      <IgnoreSpecificDefaultLibraries>LIBCMTD;MSVCRT;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ProgramDatabaseFile>$(SolutionDir)$(Configuration)/evicam.pdb</ProgramDatabaseFile>
      <SubSystem>Windows</SubSystem>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention>
      </DataExecutionPrevention>
    </Link>
    <PostBuildEvent>
      <Command>for %%x in (
	opencv_world460d.dll
) do (
	if not exist $(TargetDir)%%x copy $(CVPATH)\build\x64\vc15\bin\%%x $(TargetDir)
)

if not exist $(TargetDir)haarcascade_frontalface_default.xml copy "$(CVPATH)\sources\data\haarcascades\haarcascade_frontalface_default.xml" $(TargetDir)
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <AdditionalIncludeDirectories>..\;..\simplelog;..\creavision;..\wxcamwindow;..\wxutil;$(WXWIN)\lib\vc_lib\mswu;$(WXWIN)\include;$(CVPATH)\build\include</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;NOPCH;__WXMSW__;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <TreatWChar_tAsBuiltInType>true</TreatWChar_tAsBuiltInType>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <PrecompiledHeader />
      <WarningLevel>Level4</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <AdditionalIncludeDirectories>$(WXWIN)\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <PreLinkEvent>
      <Command>mkdir $(TargetDir)ca
mkdir $(TargetDir)es
mkdir $(TargetDir)gl
mkdir $(TargetDir)it
mkdir $(TargetDir)tr
mkdir $(TargetDir)de
mkdir $(TargetDir)oc
mkdir $(TargetDir)fr
mkdir $(TargetDir)ar
mkdir $(TargetDir)he
mkdir $(TargetDir)ru
mkdir $(TargetDir)pt_BR
mkdir $(TargetDir)ja
mkdir $(TargetDir)el
mkdir $(TargetDir)lt
mkdir $(TargetDir)zh_TW
mkdir $(TargetDir)zh_CN

echo F | xcopy "$(SolutionDir)..\po\ca.gmo" $(TargetDir)ca\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\es.gmo" $(TargetDir)es\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\gl.gmo" $(TargetDir)gl\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\it.gmo" $(TargetDir)it\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\tr.gmo" $(TargetDir)tr\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\de.gmo" $(TargetDir)de\eviacam.mo /D
echo F |  xcopy "$(SolutionDir)..\po\oc.gmo" $(TargetDir)oc\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\fr.gmo" $(TargetDir)fr\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\ar.gmo" $(TargetDir)ar\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\he.gmo" $(TargetDir)he\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\ru.gmo" $(TargetDir)ru\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\pt_BR.gmo" $(TargetDir)pt_BR\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\ja.gmo" $(TargetDir)ja\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\el.gmo" $(TargetDir)el\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\lt.gmo" $(TargetDir)lt\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\zh_TW.gmo" $(TargetDir)zh_TW\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\zh_CN.gmo" $(TargetDir)zh_CN\eviacam.mo /D

if not exist $(TargetDir)ca\wxstd.mo copy "%25WXWIN%25\locale\ca.mo" $(TargetDir)ca\wxstd.mo
if not exist $(TargetDir)es\wxstd.mo copy "%25WXWIN%25\locale\es.mo" $(TargetDir)es\wxstd.mo
if not exist $(TargetDir)gl\wxstd.mo copy "%25WXWIN%25\locale\gl_ES.mo" $(TargetDir)gl\wxstd.mo
if not exist $(TargetDir)it\wxstd.mo copy "%25WXWIN%25\locale\it.mo" $(TargetDir)it\wxstd.mo
if not exist $(TargetDir)tr\wxstd.mo copy "%25WXWIN%25\locale\tr.mo" $(TargetDir)tr\wxstd.mo
if not exist $(TargetDir)de\wxstd.mo copy "%25WXWIN%25\locale\de.mo" $(TargetDir)de\wxstd.mo
rem if not exist $(TargetDir)oc\wxstd.mo copy "%25WXWIN%25\locale\oc.mo" $(TargetDir)oc\wxstd.mo
if not exist $(TargetDir)fr\wxstd.mo copy "%25WXWIN%25\locale\fr.mo" $(TargetDir)fr\wxstd.mo
rem if not exist $(TargetDir)ar\wxstd.mo copy "%25WXWIN%25\locale\ar.mo" $(TargetDir)ar\wxstd.mo
rem if not exist $(TargetDir)he\wxstd.mo copy "%25WXWIN%25\locale\he.mo" $(TargetDir)he\wxstd.mo
if not exist $(TargetDir)ru\wxstd.mo copy "%25WXWIN%25\locale\ru.mo" $(TargetDir)ru\wxstd.mo
if not exist $(TargetDir)pt_BR\wxstd.mo copy "%25WXWIN%25\locale\pt_BR.mo" $(TargetDir)pt_BR\wxstd.mo
if not exist $(TargetDir)ja\wxstd.mo copy "%25WXWIN%25\locale\ja.mo" $(TargetDir)ja\wxstd.mo
if not exist $(TargetDir)el\wxstd.mo copy "%25WXWIN%25\locale\el.mo" $(TargetDir)el\wxstd.mo
if not exist $(TargetDir)zh_TW\wxstd.mo copy "%25WXWIN%25\locale\zh_TW.mo" $(TargetDir)zh_TW\wxstd.mo
if not exist $(TargetDir)zh_CN\wxstd.mo copy "%25WXWIN%25\locale\zh_CN.mo" $(TargetDir)zh_CN\wxstd.mo

mkdir $(TargetDir)\resources
robocopy "$(SolutionDir)..\src\resources" "$(TargetDir)\resources" /E /Xo
if %ERRORLEVEL% LEQ 1 exit 0
</Command>
    </PreLinkEvent>
    <Link>
      <AdditionalDependencies>wxmsw32u_richtext.lib;wxmsw32u_aui.lib;wxmsw32u_core.lib;wxbase32u.lib;wxtiff.lib;wxjpeg.lib;wxpng.lib;wxzlib.lib;wxregexu.lib;wxmsw32u_adv.lib;wxmsw32u_html.lib;wxmsw32u_xrc.lib;wxbase32u_net.lib;wxbase32u_xml.lib;opencv_world460.lib;wxexpat.lib;comctl32.lib;rpcrt4.lib;winmm.lib;simplelog.lib;wxcamwindow.lib;wxutil.lib;strmiids.lib;uuid.lib;quartz.lib;wsock32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <OutputFile>$(OutDir)eviacam.exe</OutputFile>
      <AdditionalLibraryDirectories>$(CVPATH)\build\x86\vc12\lib;$(WXWIN)\lib\vc_lib;$(DSHOW_SAMPLES)\baseclasses\$(Configuration);$(SolutionDir)$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <UACExecutionLevel>RequireAdministrator</UACExecutionLevel>
      <UACUIAccess>false</UACUIAccess>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention />
      <TargetMachine>MachineX86</TargetMachine>
    </Link>
    <PostBuildEvent>
      <Command>for %%x in (
	opencv_world460.dll
) do (
	if not exist $(TargetDir)%%x copy $(CVPATH)\build\x86\vc12\bin\%%x $(TargetDir)
)

if not exist $(TargetDir)haarcascade_frontalface_default.xml copy "$(CVPATH)\sources\data\haarcascades\haarcascade_frontalface_default.xml" $(TargetDir)

</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>..\;..\simplelog;..\creavision;..\wxcamwindow;..\wxutil;$(WXWIN)\lib\vc_x64_lib\mswu;$(WXWIN)\include;$(CVPATH)\build\include</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;NOPCH;__WXMSW__;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <TreatWChar_tAsBuiltInType>true</TreatWChar_tAsBuiltInType>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <AdditionalIncludeDirectories>$(WXWIN)\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <PreLinkEvent>
      <Command>mkdir $(TargetDir)ca
mkdir $(TargetDir)es
mkdir $(TargetDir)gl
mkdir $(TargetDir)it
mkdir $(TargetDir)tr
mkdir $(TargetDir)de
mkdir $(TargetDir)oc
mkdir $(TargetDir)fr
mkdir $(TargetDir)ar
mkdir $(TargetDir)he
mkdir $(TargetDir)ru
mkdir $(TargetDir)pt_BR
mkdir $(TargetDir)ja
mkdir $(TargetDir)el
mkdir $(TargetDir)lt
mkdir $(TargetDir)zh_TW
mkdir $(TargetDir)zh_CN

echo F | xcopy "$(SolutionDir)..\po\ca.gmo" $(TargetDir)ca\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\es.gmo" $(TargetDir)es\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\gl.gmo" $(TargetDir)gl\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\it.gmo" $(TargetDir)it\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\tr.gmo" $(TargetDir)tr\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\de.gmo" $(TargetDir)de\eviacam.mo /D
echo F |  xcopy "$(SolutionDir)..\po\oc.gmo" $(TargetDir)oc\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\fr.gmo" $(TargetDir)fr\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\ar.gmo" $(TargetDir)ar\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\he.gmo" $(TargetDir)he\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\ru.gmo" $(TargetDir)ru\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\pt_BR.gmo" $(TargetDir)pt_BR\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\ja.gmo" $(TargetDir)ja\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\el.gmo" $(TargetDir)el\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\lt.gmo" $(TargetDir)lt\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\zh_TW.gmo" $(TargetDir)zh_TW\eviacam.mo /D
echo F | xcopy "$(SolutionDir)..\po\zh_CN.gmo" $(TargetDir)zh_CN\eviacam.mo /D

if not exist $(TargetDir)ca\wxstd.mo copy "%25WXWIN%25\locale\ca.mo" $(TargetDir)ca\wxstd.mo
if not exist $(TargetDir)es\wxstd.mo copy "%25WXWIN%25\locale\es.mo" $(TargetDir)es\wxstd.mo
if not exist $(TargetDir)gl\wxstd.mo copy "%25WXWIN%25\locale\gl_ES.mo" $(TargetDir)gl\wxstd.mo
if not exist $(TargetDir)it\wxstd.mo copy "%25WXWIN%25\locale\it.mo" $(TargetDir)it\wxstd.mo
if not exist $(TargetDir)tr\wxstd.mo copy "%25WXWIN%25\locale\tr.mo" $(TargetDir)tr\wxstd.mo
if not exist $(TargetDir)de\wxstd.mo copy "%25WXWIN%25\locale\de.mo" $(TargetDir)de\wxstd.mo
rem if not exist $(TargetDir)oc\wxstd.mo copy "%25WXWIN%25\locale\oc.mo" $(TargetDir)oc\wxstd.mo
if not exist $(TargetDir)fr\wxstd.mo copy "%25WXWIN%25\locale\fr.mo" $(TargetDir)fr\wxstd.mo
rem if not exist $(TargetDir)ar\wxstd.mo copy "%25WXWIN%25\locale\ar.mo" $(TargetDir)ar\wxstd.mo
rem if not exist $(TargetDir)he\wxstd.mo copy "%25WXWIN%25\locale\he.mo" $(TargetDir)he\wxstd.mo
if not exist $(TargetDir)ru\wxstd.mo copy "%25WXWIN%25\locale\ru.mo" $(TargetDir)ru\wxstd.mo
if not exist $(TargetDir)pt_BR\wxstd.mo copy "%25WXWIN%25\locale\pt_BR.mo" $(TargetDir)pt_BR\wxstd.mo
if not exist $(TargetDir)ja\wxstd.mo copy "%25WXWIN%25\locale\ja.mo" $(TargetDir)ja\wxstd.mo
if not exist $(TargetDir)el\wxstd.mo copy "%25WXWIN%25\locale\el.mo" $(TargetDir)el\wxstd.mo
if not exist $(TargetDir)zh_TW\wxstd.mo copy "%25WXWIN%25\locale\zh_TW.mo" $(TargetDir)zh_TW\wxstd.mo
if not exist $(TargetDir)zh_CN\wxstd.mo copy "%25WXWIN%25\locale\zh_CN.mo" $(TargetDir)zh_CN\wxstd.mo

mkdir $(TargetDir)\resources
robocopy "$(SolutionDir)..\src\resources" "$(TargetDir)\resources" /E /Xo
if %ERRORLEVEL% LEQ 1 exit 0
</Command>
    </PreLinkEvent>
    <Link>
      <AdditionalDependencies>wxmsw32u_richtext.lib;wxmsw32u_aui.lib;wxmsw32u_core.lib;wxbase32u.lib;wxtiff.lib;wxjpeg.lib;wxpng.lib;wxzlib.lib;wxregexu.lib;wxmsw32u_adv.lib;wxmsw32u_html.lib;wxmsw32u_xrc.lib;wxbase32u_net.lib;wxbase32u_xml.lib;opencv_world460.lib;wxexpat.lib;comctl32.lib;rpcrt4.lib;winmm.lib;simplelog.lib;wxcamwindow.lib;wxutil.lib;strmiids.lib;uuid.lib;quartz.lib;wsock32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <OutputFile>$(OutDir)eviacam.exe</OutputFile>
      <AdditionalLibraryDirectories>$(CVPATH)\build\x64\vc15\lib;$(WXWIN)\lib\vc_x64_lib;$(DSHOW_SAMPLES)\baseclasses\$(Configuration);$(SolutionDir)$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <UACExecutionLevel>RequireAdministrator</UACExecutionLevel>
      <UACUIAccess>false</UACUIAccess>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <RandomizedBaseAddress>false</RandomizedBaseAddress>
      <DataExecutionPrevention>
      </DataExecutionPrevention>
    </Link>
    <PostBuildEvent>
      <Command>for %%x in (
	opencv_world460.dll
) do (
	if not exist $(TargetDir)%%x copy $(CVPATH)\build\x64\vc15\bin\%%x $(TargetDir)
)

if not exist $(TargetDir)haarcascade_frontalface_default.xml copy "$(CVPATH)\sources\data\haarcascades\haarcascade_frontalface_default.xml" $(TargetDir)

</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="cautostart_win.cpp" />
    <ClCompile Include="checkupdates.cpp" />
    <ClCompile Include="checkupdates_manager.cpp" />
    <ClCompile Include="checkupdates_ui.cpp" />
    <ClCompile Include="keyboardcode.cpp" />
    <ClCompile Include="clickwindow.cpp" />
    <ClCompile Include="clickwindowbitmap.cpp" />
    <ClCompile Include="clickwindowcontroller.cpp" />
    <ClCompile Include="clickwindowtext.cpp" />
    <ClCompile Include="cmotioncalibration.cpp" />
    <ClCompile Include="cvisualalert.cpp" />
    <ClCompile Include="dwellclick.cpp" />
    <ClCompile Include="eviacamapp.cpp" />
    <ClCompile Include="gestureclick.cpp" />
    <ClCompile Include="hotkeymanager.cpp" />
    <ClCompile Include="paths.cpp" />
    <ClCompile Include="pointeraction.cpp" />
    <ClCompile Include="viacamcontroller.cpp" />
    <ClCompile Include="visionpipeline.cpp" />
    <ClCompile Include="wabout.cpp" />
    <ClCompile Include="wcameradialog.cpp" />
    <ClCompile Include="wconfiguration.cpp" />
    <ClCompile Include="wconfirmcalibration.cpp" />
    <ClCompile Include="website.cpp" />
    <ClCompile Include="wgetkey.cpp" />
    <ClCompile Include="wmotioncalibrationx.cpp" />
    <ClCompile Include="wmotioncalibrationy.cpp" />
    <ClCompile Include="wviacam.cpp" />
    <ClCompile Include="wwizard.cpp" />
    <ClCompile Include="wwizardmanager.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="cautostart.h" />
    <ClInclude Include="cautostart_win.h" />
    <ClInclude Include="checkupdates.h" />
    <ClInclude Include="checkupdates_manager.h" />
    <ClInclude Include="checkupdates_ui.h" />
    <ClInclude Include="keyboardcode.h" />
    <ClInclude Include="clickwindow.h" />
    <ClInclude Include="clickwindowbitmap.h" />
    <ClInclude Include="clickwindowcontroller.h" />
    <ClInclude Include="clickwindowtext.h" />
    <ClInclude Include="cmotioncalibration.h" />
    <ClInclude Include="cvisualalert.h" />
    <ClInclude Include="dwellclick.h" />
    <ClInclude Include="eviacamapp.h" />
    <ClInclude Include="eviacamdefs.h" />
    <ClInclude Include="gestureclick.h" />
    <ClInclude Include="hotkeymanager.h" />
    <ClInclude Include="langnames-utf8.h" />
    <ClInclude Include="mousecommand.h" />
    <ClInclude Include="paths.h" />
    <ClInclude Include="pointeraction.h" />
    <ClInclude Include="version.h" />
    <ClInclude Include="viacamcontroller.h" />
    <ClInclude Include="visionpipeline.h" />
    <ClInclude Include="wabout.h" />
    <ClInclude Include="wcameradialog.h" />
    <ClInclude Include="wconfiguration.h" />
    <ClInclude Include="wconfirmcalibration.h" />
    <ClInclude Include="website.h" />
    <ClInclude Include="wgetkey.h" />
    <ClInclude Include="wmotioncalibrationx.h" />
    <ClInclude Include="wmotioncalibrationy.h" />
    <ClInclude Include="wviacam.h" />
    <ClInclude Include="wwizard.h" />
    <ClInclude Include="wwizardmanager.h" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="gui.rc" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\creavision\CreaVision_eviacam.vcxproj">
      <Project>{ff220e89-e196-48a7-8fd6-6382a32502e7}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="..\wxcamwindow\wxcamwindow.vcxproj">
      <Project>{05f37c83-f423-4022-bab6-8fec1972a219}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="..\wxutil\wxutil.vcxproj">
      <Project>{ef4cba03-871c-48ce-998d-66f326b8a99a}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>
